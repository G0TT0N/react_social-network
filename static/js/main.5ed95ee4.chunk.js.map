{"version":3,"sources":["redux/dialogs-reducer.js","redux/users-reducer.js","assets/images/loader.svg","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Posts.module.css","api/api.js","components/Navbar/Navbar.module.css","serviceWorker.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","hoc/withSuspense.jsx","index.js","components/common/Preloader/Preloader.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.jsx","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["initialState","messagesData","id","message","dialogsData","name","sendMessageCreator","newMessageBody","type","dialogsReducer","state","arguments","length","undefined","action","body","Object","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","_ref","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","dispatch","response","wrap","_context","prev","next","usersAPI","getUsers","sent","items","count","totalCount","stop","_x","apply","this","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","follow","_ref3","_callee3","_context3","bind","_x6","unfollow","_ref4","_callee4","_context4","_x7","usersReducer","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","map","user","followed","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","filter","module","exports","__webpack_require__","p","descriptionBlock","item","d","__webpack_exports__","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","get","then","data","post","delete","getProfile","console","warn","getStatus","updateStatus","status","put","me","login","email","password","rememberMe","logout","nav","active","Boolean","window","location","hostname","match","postsData","likesCount","profile","setStatus","profileReducer","newPost","newPostText","objectSpread","toConsumableArray","postId","sidebarReducer","isAuth","setAuthUserData","payload","getAuthUserData","asyncToGenerator","regenerator_default","_response$data","_login","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","props","react_default","createElement","className","style","react_router_dom","to","activeClassName","Music","News","Settings","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStaus","useEffect","onDoubleClick","onBlur","onChange","e","currentTarget","value","autoFocus","ProfileInfo","src","photos","small","alt","ProfileInfo_ProfileStatusWithHooks","Preloader","Posts","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElement","elem","Post_Posts","likeCount","postsBlock","AddNewPostFormRedux","onSubmit","values","addPost","posts","reduxForm","handleSubmit","Field","component","TextArea","validate","required","MyPostsContainer","connect","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","push","getUserProfile","components_Profile_Profile","assign","Component","withRouter","Header","header","loginBlock","onClick","HeaderContainer","components_Header_Header","LoginReduxForm","error","Input","placeholder","formSummaryError","messages","stopSubmit","_error","react_router","formData","DialogsContainer","lazy","UsersContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","exact","path","render","Profile_ProfileContainer","react","fallback","components_News_News","components_Music_Music","components_Settings_Settings","components_Login_Login","AppContainer","promise","Promise","all","MainApp","basename","process","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_loader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_loader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","maxLength","FormControl","input","meta","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","react__WEBPACK_IMPORTED_MODULE_1___default","styles","formControl","children","restProps","child"],"mappings":"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","file":"static/js/main.5ed95ee4.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n    messagesData: [\n        {\n            id: 1,\n            message: '111'\n        },\n        {\n            id: 2,\n            message: '222'\n        },\n        {\n            id: 3,\n            message: '333'\n        },\n        {\n            id: 4,\n            message: '444'\n        },\n        {\n            id: 5,\n            message: '555'\n        },\n        {\n            id: 6,\n            message: '666'\n        }\n    ],\n\n    dialogsData: [\n        {\n            id: 1,\n            name: 'Andrew'\n        },\n        {\n            id: 2,\n            name: 'Sveta'\n        },\n        {\n            id: 3,\n            name: 'Maxim'\n        },\n        {\n            id: 4,\n            name: 'Igor'\n        },\n        {\n            id: 5,\n            name: 'Ivan'\n        },\n        {\n            id: 6,\n            name: 'Anton'\n        }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: 7, message: body}], // скопировали массив и запушили в конец новый объект\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\nexport default dialogsReducer;","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [], //сюда попадет айди пользователя\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => { // идентичная запись users: [...state.users], но не получится запустить проверку\n                    if (user.id === action.userId) {\n                        return {...user, followed: true}\n                    }\n                    return user;\n                })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: false}\n                    }\n                    return user;\n                })\n            };\n        case SET_USERS:\n            return {...state, users: action.users};\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage};\n        case SET_TOTAL_USERS_COUNT:\n            return {...state, totalUsersCount: action.count};\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching // если тру, то\n                    ? [...state.followingInProgress, action.userId] // добавить в массив выбранный айди\n                    : state.followingInProgress.filter(id => id != action.userId) // записать только те айди, что не равны выбранному\n            };\n        default:\n            return state;\n    }\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n});\n\n// санк криэйтор, принимает в себя данные из вне и через замыкание передает в санку\nexport const getUsersThunkCreator = (currentPage, pageSize) =>\n    async (dispatch) => { // сама санка.\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n        let response = await usersAPI.getUsers(currentPage, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(response.items));\n        dispatch(setTotalUsersCount(response.totalCount));\n    };\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => async (dispatch) => {\n       await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n    };\n\nexport const unfollow = (userId) => async (dispatch) => {\n       await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n    };\n\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/loader.3ca1c911.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1nT56\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__y9YXG\"};","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: { // заголовки, что всегда отправляются\\возвращаются сервером при запросе\n        'API-KEY': '1485309f-39bf-4f40-bd50-88a179c90f9c'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`) // параметры придут из контейнерной компоненты\n            .then(response => response.data); // необязательный респонс. Реализует прокидываение только тех данных, что использует компонента и ничего больше.\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n            .then(response => response.data);\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n            .then(response => response.data);\n    },\n\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.');\n        return profileAPI.getProfile(userId); // обратная совместимость на другую АПИ.\n    }\n};\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId) // приходит из withRouter\n            .then(response => response.data);\n    },\n\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status}); // или просто , {status}\n    }\n};\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n            .then(response => response.data);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = 'ADD-POST'; // констатны action type\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\n\nlet initialState = {\n    postsData: [\n        {\n            id: 1,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 2,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 3,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 4,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 5,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 6,\n            message: 'qwe',\n            likesCount: 10\n        }\n    ],\n    profile: null,\n    status: '',\n}; // инициалиационный стейт, пока не получили актуальный с сервера\n\n//reducer\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 7,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,// обязательно делать копию стейта перед изменениями\n                postsData: [...state.postsData, newPost], // не забывать делать глубокую копию (плюс опционально добавляется в конец массива новый объект)\n                newPostText: ''\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id != action.postId)\n            }\n        }\n        default:\n            return state;\n    }\n};\n\n//action creator\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\n\n//thunk-creator => thunk => {api.then.dispatch(action-creator)}\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\n\nexport default profileReducer;","let initialState = {\n\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n\n    return state;\n};\n\nexport default sidebarReducer;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.resultCode === 0) { // промис уходит в app-reducer\n        let {id, login, email} = response.data; // объект формируется axios, обязательно сверится store.getState().auth\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\n\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'; // запрос текста ошибки с АПИ\n        dispatch(stopSubmit('login', {_error: message})); // прекращает сабмит формы по имени name и показывает ошибку на всю форму (можно указывать конкретное поле в объекте)\n    }\n};\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n};\n\nexport default authReducer;\n","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => dispatch => {  // пришел промис из auth-reducer\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());  // дождаться всех и только потом проинициализироваться\n        })\n};\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({ // прокидывает редьюсеры, можно воспринимать как стейт\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware)); //обычное подключение\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // с расширением redux\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport style from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = (props) => {\n    return (\n        <nav className={style.nav}>\n            <div className={style.item}>\n                <NavLink to=\"/profile\"\n                         activeClassName={style.active}>Profile</NavLink> {/*  замена тега <a/>, отличие: не перезагружает страницу при переходе */}\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/news\" activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/music\" activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/settings\" activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </nav>\n\n    )\n};\n\nexport default Navbar\n\n\n","import React from 'react';\nimport style from './Music.module.css'\n\n\nconst Music = () => {\n    return (\n        <div>\n            music\n        </div>\n    )\n};\n\nexport default Music","import React from 'react';\nimport style from './News.module.css'\n\n\nconst News = () => {\n    return (\n        <div>\n            news\n        </div>\n    )\n};\n\nexport default News","import React from 'react';\nimport style from './Settings.module.css'\n\n\nconst Settings = () => {\n    return (\n        <div>\n            settings\n        </div>\n    )\n};\n\nexport default Settings","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => { // создаем функциональную компоненту на хуках\n    /*  let stateWithSetState = useState(false); // useState() возвращает массив из 2х элементов\n        let editMode = stateWithSetState[0]; // первый элемент это часть переданного стейта\n        let setEditMode = stateWithSetState[1]; // второй это функция, что будет изменять первый элемент*/\n\n    let [editMode, setEditMode] = useState(false); // современный синтаксис с деструктурированным присваниванием\n    let [status, setStaus] = useState(props.status); // useState достает из props status и присваивает первому элементу, плюс объявляет функцию, что следит за ним\n\n    useEffect(() => { // хук useEffect.\n        setStaus(props.status); //Запускается после рендера и ререндерит после изменения зависимости\n    }, [props.status]); // зависимость. Нежелательно, но возможно оставить пустым массивом\n\n    const activateEditMode = () => {\n        setEditMode(true) // меняет editMode на true\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status)\n    };\n\n    const onStatusChange = (e) => {\n        setStaus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {!editMode && // если false то показать span\n            <div>\n                <span onDoubleClick={activateEditMode}> {/* вызов функции по двойному клику */}\n                    {props.status || \"no status\"}\n                </span>\n            </div>\n            }\n\n            {editMode && // если true то показать div\n            <div>\n                <input\n                    onBlur={deactivateEditMode}\n                    onChange={onStatusChange}\n                    value={status}\n                    autoFocus={true} // при клике на элемент, сразу активирует поле ввода\n                />\n            </div>\n            }\n        </div>\n    )\n};\n\nexport default ProfileStatusWithHooks;","import React from 'react';\nimport style from './ProfileInfo.module.css';\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile){\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={style.descriptionBlock}>\n                <img src={profile.photos.small} alt=\"\"/>\n                <ProfileStatusWithHooks\n                    status={status}\n                    updateStatus={updateStatus}\n                />\n            </div>\n        </div>\n    )\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport style from './Posts.module.css';\n\nconst Posts = (props) => {\n    return (\n        <div className={style.item}>\n            <img src=\"https://cdn2.img.inosmi.ru/images/24413/79/244137985.jpg\" alt=\"tramp\"/>\n            <p>{props.message}</p>\n        </div>\n    )\n};\n\nexport default Posts;","import React from 'react';\nimport style from './MyPosts.module.css';\nimport Posts from \"./Post/Posts\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10); // настройка валидатора\n\nconst MyPosts = React.memo(props => { // c оптимизацией рендера React.memo\n    let postsElement = props.postsData.map(elem =>\n        <Posts\n            message={elem.message}\n            likeCount={elem.likesCount}\n        />\n    );\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div className={style.postsBlock}>\n            <h3>My Posts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={style.posts}>\n                {postsElement}\n            </div>\n        </div>\n    )\n\n});\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component={TextArea} // импорт компоненты формы\n                    name='newPostText'\n                    validate={[required, maxLength10]} // подключение с переменной\n                />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n\n        </form>\n    )\n};\n\nlet AddNewPostFormRedux = reduxForm({\n    form: \"ProfileAddNewPostForm\"\n})(AddNewPostForm);\n\nexport default MyPosts;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = ({profile, status, updateStatus}) => {\n    return (\n        <div>\n            <ProfileInfo\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n            />\n            <MyPostsContainer/>\n        </div>\n    )\n};\n\nexport default Profile","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match.params.userId; {/* withRouter даёт объект, где сидят данные .match.params.userId  */}\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if(!userId) {\n                this.props.history.push('/login') // если не оказалось подходящего пользователя редирект на логин\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter,\n)(ProfileContainer);","import React from 'react';\nimport style from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst Header = (props) => {\n    return (\n        <header className={style.header}>\n            <img src=\"https://about.canva.com/wp-content/uploads/sites/3/2016/08/logos-1.png\" alt=\"logo\"/>\n            <div className={style.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n};\n\nexport default Header","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {\n    logout\n})(HeaderContainer);\n\n\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from '../common/FormsControls/FormsControls.module.css'\n\nconst LoginForm = ({handleSubmit, error}) => { // деструктуризация props, берем только нужное оттуда\n    return (\n        <form\n            onSubmit={handleSubmit}> {/* отменяет перезагрузку страницы при отправке формы, собирает все данные из формы */}\n            <div>\n                <Field\n                    component={Input} // импорт компоненты формы\n                    placeholder={\"email\"}\n                    name={\"email\"}\n                    validate={[required]} // подключение валидатора\n                />\n            </div>\n            <div>\n                <Field\n                    component={Input}\n                    placeholder={\"password\"}\n                    type={\"password\"}\n                    name={\"password\"}\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <Field\n                    component={Input}\n                    type={\"checkbox\"}\n                    name={\"rememberMe\"}\n                /> remember me\n            </div>\n\n            {error && <div className={style.formSummaryError}> {/* покажет ошибку при неверных данных логина */}\n                {error}\n            </div>}\n\n            <div>\n                <button> Login</button>\n            </div>\n        </form>\n    )\n};\n\nconst LoginReduxForm = reduxForm({ // вызов хок по документации\n    // вводить уникальное имя формы\n    form: 'login'\n})(LoginForm);\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => { // сюда придут все значения из формы\n        props.login(formData.email, formData.password, formData.rememberMe)\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div>\n            <h1>login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, {Component, Suspense} from 'react';\nimport store from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport './App.css';\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); // ленивая загрузка\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer')); // ленивая загрузка\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route exact path='/profile/:userId?' render={() => // Route указыввет по какуму пути path='/profile/:userId?' должен произойти рендер компоненты\n                        <ProfileContainer/>}/> {/* либо component={<ProfileContainer/>}, но тогда нельзя передать props */}\n                    <Route exact path='/dialogs' render={() => {\n                        return <Suspense\n                            fallback={\n                                <Preloader/>}> {/*  показывать прелоадер пока загружается компонент, лучше через хок */}\n                            <DialogsContainer/>\n                        </Suspense>\n                    }}/>\n                    <Route exact path='/news' render={() =>\n                        <News/>}/> {/* атрибут exact заставляет отрисовывать в точности как указано в конце URL, не захватывая по пути знакомые компоненты  */}\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users'\n                           render={withSuspense(UsersContainer)}/> {/* хок для ленивой загрузки и прелоадера */}\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {\n        initializeApp,\n    })\n)(App);\n\nconst MainApp = () => {\n    return (\n        <BrowserRouter //позволяет использовать рендер компонент по ссылкам согласно их URL пути\n            basename={process.env.PUBLIC_URL}> {/* атрибут для настройки окружения. Дословно атрибут говорит возьми PUBLIC_URL из process.env. Используется для GithubPages */}\n            <Provider store={store}> {/* контекст от реакт-редакса */}\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n};\n\nexport default MainApp\n","import React, {Suspense} from 'react';\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = Component => { // хок принимает компоненту и возвращает, наделив функционалом редиректа\n    return (props) => {\n        return <Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </Suspense>\n    };\n};\n\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from \"./App\";\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n","import React from 'react';\nimport preloader from \"../../../assets/images/loader.svg\";\n\n\nlet Preloader = (props) => {\n    return (\n        <div>\n            <img src={preloader}/>\n        </div>\n    )\n};\n\nexport default Preloader;","export const required = (value) => { // если нет value то показать ошибку\n    if (value) return undefined;\n    return 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {  // проверка максимальной длинны поля c замыканием\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n};\n\n","import React from 'react';\nimport styles from './FormsControls.module.css';\n\n// форм криэйтер\nconst FormControl = ({input, meta, ...props}) => { // *из-за библиотеки приходят сюда не стандартные props, а объект с input и meta\n    const hasError = meta.touched && meta.error; // **из meta приходят touched и error, сохраняем\n    return (\n        <div\n            className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}> {/* **если пришли, то применить этот стиль */}\n            <div>\n                {props.children} {/* сюда придут input или textarea */}\n            </div>\n            {hasError && <span>{meta.error}</span>} {/* **если пришли, то показать элемент */}\n        </div>\n    )\n};\n\n// формы\nexport const TextArea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/> {/*  *поэтому надо деструктуризировать передаваемые данные  */}\n    </FormControl>\n};\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};"],"sourceRoot":""}
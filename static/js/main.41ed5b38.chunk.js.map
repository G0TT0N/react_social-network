{"version":3,"sources":["components/common/FormsControls/FormsControls.jsx","redux/dialogs-reducer.js","redux/users-reducer.js","assets/images/User.png","api/api.js","assets/images/loader.svg","components/Profile/MyPosts/Post/Posts.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","redux/profile-reducer.js","redux/sidebar-reducer.js","redux/auth-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/News/News.jsx","components/Settings/Settings.jsx","components/Profile/MyPosts/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/MyPosts/ProfileInfo/ProfileDataForm.jsx","components/Profile/MyPosts/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Posts.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","App.js","hoc/withSuspense.jsx","index.js","components/common/Preloader/Preloader.jsx","components/common/FormsControls/FormsControls.module.css","utils/validators/validators.js","components/Profile/MyPosts/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["FormControl","_ref","input","meta","props","Object","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","hasError","touched","error","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","formControl","children","TextArea","restProps","child","assign","Input","createField","placeholder","name","validators","component","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_3__","validate","initialState","messagesData","id","message","dialogsData","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","concat","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","users","pageSize","totalUsersCount","currentPage","isFetching","followingInProgress","followSuccess","userId","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","getUsersThunkCreator","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","dispatch","response","wrap","_context","prev","next","usersAPI","getUsers","sent","items","count","totalCount","stop","_x","apply","this","followUnfollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","follow","_ref3","_callee3","_context3","bind","_x6","unfollow","_ref4","_callee4","_context4","_x7","usersReducer","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","map","user","followed","_home_gotton_PhpstormProjects_social_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_2__","filter","module","exports","__webpack_require__","p","d","__webpack_exports__","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","get","then","data","post","delete","getProfile","console","warn","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","Content-Type","saveProfile","profile","me","login","email","password","rememberMe","logout","item","nav","active","Boolean","window","location","hostname","match","postsData","likesCount","setStatus","getUserProfile","asyncToGenerator","regenerator_default","profileReducer","newPost","newPostText","objectSpread","toConsumableArray","postId","photos","sidebarReducer","isAuth","setAuthUserData","payload","getAuthUserData","_response$data","_login","authReducer","initialized","appReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","usersPage","auth","form","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Navbar","react_default","style","react_router_dom","to","activeClassName","Music","News","Settings","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","_useState4","setStaus","useEffect","onDoubleClick","onBlur","onChange","e","currentTarget","value","autoFocus","ProfileDataFormReduxForm","reduxForm","handleSubmit","onSubmit","formSummaryError","keys","contacts","key","ProfileData","isOwner","goToEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","ProfileInfo","Preloader","descriptionBlock","src","small","userPhoto","mainPhoto","alt","target","files","ProfileInfo_ProfileDataForm","initialValues","formdata","ProfileInfo_ProfileData","ProfileInfo_ProfileStatusWithHooks","Posts","maxLength10","maxLengthCreator","MyPosts","React","memo","postsElement","elem","Post_Posts","likeCount","postsBlock","AddNewPostFormRedux","values","addPost","posts","Field","required","MyPostsContainer","connect","addPostActionCreator","Profile","MyPosts_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","push","refreshProfile","prevProps","components_Profile_Profile","Component","file","_ref5","_callee5","getState","_context5","stopSubmit","_error","messages","abrupt","Promise","reject","withRouter","Header","header","loginBlock","HeaderContainer","components_Header_Header","LoginReduxForm","href","react_router","DialogsContainer","lazy","UsersContainer","App","initializeApp","Header_HeaderContainer","components_Navbar_Navbar","exact","path","render","Profile_ProfileContainer","react","fallback","components_News_News","components_Music_Music","components_Settings_Settings","components_Login_Login","AppContainer","promise","all","MainApp","basename","process","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_assets_images_loader_svg__WEBPACK_IMPORTED_MODULE_1__","_assets_images_loader_svg__WEBPACK_IMPORTED_MODULE_1___default","preloader","maxLength"],"mappings":"8OAKMA,EAAc,SAAAC,GAA6BA,EAA3BC,MAA2B,IAApBC,EAAoBF,EAApBE,KAASC,EAAWC,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,kBACvCM,EAAWJ,EAAKK,SAAWL,EAAKM,MACtC,OACIC,EAAAC,EAAAC,cAAA,OACIC,UAAWC,IAAOC,YAAc,KAAOR,EAAWO,IAAOL,MAAQ,KADrE,IAEIC,EAAAC,EAAAC,cAAA,WACKR,EAAMY,SADX,KAGCT,GAAYG,EAAAC,EAAAC,cAAA,YAAOT,EAAKM,OAL7B,MAWKQ,EAAW,SAACb,GAAU,IACxBF,EAAoCE,EAApCF,MAAuBgB,GAAad,EAA7BD,KAA6BC,EAAvBe,MADWd,OAAAC,EAAA,EAAAD,CACYD,EADZ,2BAE/B,OAAOM,EAAAC,EAAAC,cAACZ,EAAgBI,EACpBM,EAAAC,EAAAC,cAAA,WAAAP,OAAAe,OAAA,GAAclB,EAAWgB,IADtB,MAKEG,EAAQ,SAACjB,GAAU,IACrBF,EAAoCE,EAApCF,MAAuBgB,GAAad,EAA7BD,KAA6BC,EAAvBe,MADQd,OAAAC,EAAA,EAAAD,CACeD,EADf,2BAE5B,OAAOM,EAAAC,EAAAC,cAACZ,EAAgBI,EACpBM,EAAAC,EAAAC,cAAA,QAAAP,OAAAe,OAAA,GAAWlB,EAAWgB,MAIjBI,EAAc,SAACC,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CtB,EAA3CuB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAmD,GAAIG,EAAvDH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA8D,GAA9D,OACvBjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmB,EAAA,EAAD1B,OAAAe,OAAA,CACIG,YAAaA,EACbC,KAAMA,EACNQ,SAAUP,EACVC,UAAWA,GACPtB,IANZ,IAOQ0B,yFCvCRG,EAAe,CACfC,aAAc,CACV,CACIC,GAAI,EACJC,QAAS,OAEb,CACID,GAAI,EACJC,QAAS,OAEb,CACID,GAAI,EACJC,QAAS,OAEb,CACID,GAAI,EACJC,QAAS,OAEb,CACID,GAAI,EACJC,QAAS,OAEb,CACID,GAAI,EACJC,QAAS,QAIjBC,YAAa,CACT,CACIF,GAAI,EACJX,KAAM,UAEV,CACIW,GAAI,EACJX,KAAM,SAEV,CACIW,GAAI,EACJX,KAAM,SAEV,CACIW,GAAI,EACJX,KAAM,QAEV,CACIW,GAAI,EACJX,KAAM,QAEV,CACIW,GAAI,EACJX,KAAM,WAmBLc,EAAqB,SAACC,GAAD,MAAqB,CAACC,KAxEnC,eAwEuDD,mBAE7DE,IAhBQ,WAAkC,IAAjCC,EAAiCf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBM,EAAcU,EAAWhB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQc,EAAOH,MACX,IA5Da,eA6DT,IAAII,EAAOD,EAAOJ,eAClB,OAAOlC,OAAAwC,EAAA,EAAAxC,CAAA,GACAqC,EADP,CAEIR,aAAY,GAAAY,OAAAzC,OAAA0C,EAAA,EAAA1C,CAAMqC,EAAMR,cAAZ,CAA0B,CAACC,GAAI,EAAGC,QAASQ,OAG/D,QACI,OAAOF,yPC1DfT,EAAe,CACfe,MAAO,GACPC,SAAU,GACVC,gBAAiB,EACjBC,YAAa,EACbC,YAAY,EACZC,oBAAqB,IA6CZC,EAAgB,SAACC,GAAD,MAAa,CAACf,KA3D5B,SA2D0Ce,WAC5CC,EAAkB,SAACD,GAAD,MAAa,CAACf,KA3D5B,WA2D4Ce,WAEhDE,EAAiB,SAACN,GAAD,MAAkB,CAACX,KA3DxB,mBA2DgDW,gBAE5DO,EAAmB,SAACN,GAAD,MAAiB,CAACZ,KA3DvB,qBA2DiDY,eAC/DO,EAA0B,SAACP,EAAYG,GAAb,MAAyB,CAC5Df,KA5DiC,+BA6DjCY,aACAG,WAISK,EAAuB,SAACT,EAAaF,GAAd,sBAAAhD,EAAAI,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAnD,EAAAoD,KAChC,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAJ,EAAAnD,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACIL,EAASP,GAAiB,IAC1BO,EAASR,EAAeN,IAF5BiB,EAAAE,KAAA,EAGyBC,IAASC,SAASrB,EAAaF,GAHxD,OAGQiB,EAHRE,EAAAK,KAIIR,EAASP,GAAiB,IAC1BO,EAjB4B,CAACzB,KA3DnB,YA2DoCQ,MAiB5BkB,EAASQ,QAC3BT,EAhBgD,CAACzB,KA3D3B,wBA2DwDmC,MAgBlDT,EAASU,aANzC,wBAAAR,EAAAS,SAAAb,MADgC,gBAAAc,GAAA,OAAA7E,EAAA8E,MAAAC,KAAArD,YAAA,IAU9BsD,EAAkB,eAAAC,EAAA7E,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAnD,EAAAoD,KAAG,SAAAoB,EAAOlB,EAAUV,EAAQ6B,EAAWC,GAApC,OAAAvB,EAAAnD,EAAAwD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cACvBL,EAASN,GAAwB,EAAMJ,IADhB+B,EAAAhB,KAAA,EAEFc,EAAU7B,GAFR,OAGK,IAHL+B,EAAAb,KAGVc,YACTtB,EAASoB,EAAc9B,IAE3BU,EAASN,GAAwB,EAAOJ,IANjB,wBAAA+B,EAAAT,SAAAM,MAAH,gBAAAK,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAH,MAAAC,KAAArD,YAAA,GASXiE,EAAS,SAACrC,GAAD,sBAAAsC,EAAAxF,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAnD,EAAAoD,KAAY,SAAA+B,EAAO7B,GAAP,OAAAH,EAAAnD,EAAAwD,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACrBW,EAAmBhB,EAAUV,EAAQgB,IAASqB,OAAOI,KAAKzB,KAAWjB,GADhD,wBAAAyC,EAAAlB,SAAAiB,MAAZ,gBAAAG,GAAA,OAAAJ,EAAAd,MAAAC,KAAArD,YAAA,IAITuE,EAAW,SAAC3C,GAAD,sBAAA4C,EAAA9F,OAAAwD,EAAA,EAAAxD,CAAAyD,EAAAnD,EAAAoD,KAAY,SAAAqC,EAAOnC,GAAP,OAAAH,EAAAnD,EAAAwD,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACvBW,EAAmBhB,EAAUV,EAAQgB,IAAS2B,SAASF,KAAKzB,KAAWf,GADhD,wBAAA6C,EAAAxB,SAAAuB,MAAZ,gBAAAE,GAAA,OAAAH,EAAApB,MAAAC,KAAArD,YAAA,IAIT4E,IAlFM,WAAkC,IAAjC7D,EAAiCf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBM,EAAcU,EAAWhB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQc,EAAOH,MACX,IAnBO,SAoBH,OAAOnC,OAAAmG,EAAA,EAAAnG,CAAA,GACAqC,EADP,CAEIM,MAAON,EAAMM,MAAMyD,IAAI,SAAAC,GACnB,OAAIA,EAAKvE,KAAOQ,EAAOY,OACZlD,OAAAmG,EAAA,EAAAnG,CAAA,GAAIqG,EAAX,CAAiBC,UAAU,IAExBD,MAGnB,IA5BS,WA6BL,OAAOrG,OAAAmG,EAAA,EAAAnG,CAAA,GACAqC,EADP,CAEIM,MAAON,EAAMM,MAAMyD,IAAI,SAAAC,GACnB,OAAIA,EAAKvE,KAAOQ,EAAOY,OACZlD,OAAAmG,EAAA,EAAAnG,CAAA,GAAIqG,EAAX,CAAiBC,UAAU,IAExBD,MAGnB,IArCU,YAsCN,OAAOrG,OAAAmG,EAAA,EAAAnG,CAAA,GAAIqC,EAAX,CAAkBM,MAAOL,EAAOK,QACpC,IAtCiB,mBAuCb,OAAO3C,OAAAmG,EAAA,EAAAnG,CAAA,GAAIqC,EAAX,CAAkBS,YAAaR,EAAOQ,cAC1C,IAvCsB,wBAwClB,OAAO9C,OAAAmG,EAAA,EAAAnG,CAAA,GAAIqC,EAAX,CAAkBQ,gBAAiBP,EAAOgC,QAC9C,IAxCmB,qBAyCf,OAAOtE,OAAAmG,EAAA,EAAAnG,CAAA,GAAIqC,EAAX,CAAkBU,WAAYT,EAAOS,aACzC,IAzC6B,+BA0CzB,OAAO/C,OAAAmG,EAAA,EAAAnG,CAAA,GACAqC,EADP,CAEIW,oBAAqBV,EAAOS,WAAP,GAAAN,OAAAzC,OAAAuG,EAAA,EAAAvG,CACXqC,EAAMW,qBADK,CACgBV,EAAOY,SACtCb,EAAMW,oBAAoBwD,OAAO,SAAA1E,GAAE,OAAIA,IAAOQ,EAAOY,WAEnE,QACI,OAAOb,yBCzDnBoE,EAAAC,QAAiBC,EAAAC,EAAuB,kECAxCD,EAAAE,EAAAC,EAAA,sBAAA5C,IAAAyC,EAAAE,EAAAC,EAAA,sBAAAC,IAAAJ,EAAAE,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAN,EAAA,KAEMO,EAAWC,SAAa,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACLC,UAAW,0CAINrD,EAAW,CACpBC,SADoB,WACqB,IAAhCrB,EAAgCxB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAlB,EAAGsB,EAAetB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,GACjC,OAAO4F,EAASM,IAAT,cAAA/E,OAA2BK,EAA3B,WAAAL,OAAgDG,IAClD6E,KAAK,SAAA5D,GAAQ,OAAIA,EAAS6D,QAGnCnC,OANoB,SAMbrC,GACH,OAAOgE,EAASS,KAAT,UAAAlF,OAAwBS,IAC1BuE,KAAK,SAAA5D,GAAQ,OAAIA,EAAS6D,QAGnC7B,SAXoB,SAWX3C,GACL,OAAOgE,EAASU,OAAT,UAAAnF,OAA0BS,IAC5BuE,KAAK,SAAA5D,GAAQ,OAAIA,EAAS6D,QAGnCG,WAhBoB,SAgBT3E,GAEP,OADA4E,QAAQC,KAAK,8CACNhB,EAAWc,WAAW3E,KAIxB6D,EAAa,CAEtBc,WAFsB,SAEX3E,GACP,OAAOgE,EAASM,IAAI,WAAatE,GAC5BuE,KAAK,SAAA5D,GAAQ,OAAIA,EAAS6D,QAGnCM,UAPsB,SAOZ9E,GACN,OAAOgE,EAASM,IAAI,kBAAoBtE,IAG5C+E,aAXsB,SAWTC,GACT,OAAOhB,EAASiB,IAAT,iBAA+B,CAACD,OAAQA,KAEnDE,UAdsB,SAcZC,GACN,IAAMC,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,QAASH,GAClBnB,EAASiB,IAAT,gBAA8BG,EAAU,CAC3ChB,QAAS,CACLmB,eAAgB,0BAI5BC,YAvBsB,SAuBVC,GACR,OAAOzB,EAASiB,IAAT,WAAyBQ,KAI3B3B,EAAU,CACnB4B,GADmB,WAEf,OAAO1B,EAASM,IAAT,WACFC,KAAK,SAAA5D,GAAQ,OAAIA,EAAS6D,QAEnCmB,MALmB,SAKbC,EAAOC,GAA8B,IAApBC,EAAoB1H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACvC,OAAO4F,EAASS,KAAT,aAA4B,CAACmB,QAAOC,WAAUC,gBAEzDC,OARmB,WASf,OAAO/B,EAASU,OAAT,qCCrEfnB,EAAAC,QAAiBC,EAAAC,EAAuB,wDCCxCH,EAAAC,QAAA,CAAkBwC,KAAA,+ECAlBzC,EAAAC,QAAA,CAAkByC,IAAA,oBAAAD,KAAA,qBAAAE,OAAA,4HCWEC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,qKCTJ7H,EAAe,CACf8H,UAAW,CACP,CACI5H,GAAI,EACJC,QAAS,MACT4H,WAAY,IAEhB,CACI7H,GAAI,EACJC,QAAS,MACT4H,WAAY,IAEhB,CACI7H,GAAI,EACJC,QAAS,MACT4H,WAAY,IAEhB,CACI7H,GAAI,EACJC,QAAS,MACT4H,WAAY,IAEhB,CACI7H,GAAI,EACJC,QAAS,MACT4H,WAAY,IAEhB,CACI7H,GAAI,EACJC,QAAS,MACT4H,WAAY,KAGpBhB,QAAS,KACTT,OAAQ,IAqDC0B,EAAY,SAAC1B,GAAD,MAAa,CAAC/F,KA3FpB,aA2FsC+F,WAK5C2B,EAAiB,SAAC3G,GAAD,sBAAAtD,EAAAI,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAY,SAAAC,EAAOC,GAAP,IAAAC,EAAA,OAAAkG,EAAAzJ,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACjBC,IAAS2D,WAAW3E,GADH,OAClCW,EADkCE,EAAAK,KAEtCR,EARwC,CAACzB,KA3FpB,mBA2F4CwG,QAQzC9E,IAFc,wBAAAE,EAAAS,SAAAb,MAAZ,gBAAAc,GAAA,OAAA7E,EAAA8E,MAAAC,KAAArD,YAAA,IAiCf0I,EAvFQ,WAAkC,IAAjC3H,EAAiCf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBM,EAAcU,EAAWhB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQc,EAAOH,MACX,IA9CS,WA+CL,IAAI8H,EAAU,CACVnI,GAAI,EACJC,QAASO,EAAO4H,YAChBP,WAAY,GAEhB,OAAO3J,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EADP,CAEIqH,UAAS,GAAAjH,OAAAzC,OAAAoK,EAAA,EAAApK,CAAMqC,EAAMqH,WAAZ,CAAuBO,IAChCC,YAAa,KAGrB,IAzDiB,mBA0Db,OAAOlK,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EADP,CAEIsG,QAASrG,EAAOqG,UAGxB,IA9DW,aA+DP,OAAO3I,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EADP,CAEI6F,OAAQ5F,EAAO4F,SAGvB,IAnEY,cAoER,OAAOlI,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EADP,CAEIqH,UAAWrH,EAAMqH,UAAUlD,OAAO,SAAAI,GAAC,OAAIA,EAAE9E,KAAOQ,EAAO+H,WAG/D,IAxEmB,qBAyEf,OAAOrK,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EADP,CAEIsG,QAAQ3I,OAAAmK,EAAA,EAAAnK,CAAA,GACDqC,EAAMsG,QADN,CAEH2B,OAAQhI,EAAOgI,WAI3B,QACI,OAAOjI,aCzFfT,EAAe,GAUJ2I,EANQ,WAAkC,IAAjClI,EAAiCf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBM,EAAyBN,UAAAC,OAAA,GAAAD,UAAA,GAGrD,OAAOe,YCFPT,EAAe,CACfsB,OAAQ,KACR4F,MAAO,KACPD,MAAO,KACP9F,YAAY,EACZyH,QAAQ,GAgBCC,EAAkB,SAACvH,EAAQ4F,EAAOD,EAAO2B,GAAvB,MAAmC,CAC9DrI,KAxBkB,gBAyBlBuI,QAAS,CAACxH,SAAQ4F,QAAOD,QAAO2B,YAGvBG,EAAkB,iCAAA/K,EAAAI,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAM,SAAAC,EAAOC,GAAP,IAAAC,EAAA+G,EAAA9I,EAAA+I,EAAA/B,EAAA,OAAAiB,EAAAzJ,EAAAwD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACZ+C,IAAQ4B,KADI,OAEL,KADxB/E,EAD6BE,EAAAK,MAEpBc,aAAkB0F,EACF/G,EAAS6D,KAA7B5F,EADsB8I,EACtB9I,GAAI+G,EADkB+B,EAClB/B,MAAOC,EADW8B,EACX9B,MAChBlF,EAAS6G,EAAgB3I,EAAIgH,EAAOD,GAAO,KAJd,wBAAA9E,EAAAS,SAAAb,MAAN,gBAAAc,GAAA,OAAA7E,EAAA8E,MAAAC,KAAArD,YAAA,IA2BhBwJ,EA7CK,WAAkC,IAAjCzI,EAAiCf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBM,EAAcU,EAAWhB,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQc,EAAOH,MACX,IAZc,gBAaV,OAAOnC,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EACAC,EAAOoI,SAGlB,QACI,OAAOrI,sBClBfT,EAAe,CACfmJ,aAAa,GA2BFC,EAvBI,WAAkC,IAAjC3I,EAAiCf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBM,EACxB,QADiDN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAClCW,MACX,IAToB,sBAUhB,OAAOnC,OAAAmK,EAAA,EAAAnK,CAAA,GACAqC,EADP,CAEI0I,aAAa,IAGrB,QACI,OAAO1I,ICRf4I,EAAWC,YAAgB,CAC3BC,YAAanB,EACboB,YAAahJ,IACbiJ,QAASd,EACTe,UAAWpF,IACXqF,KAAMT,EACNU,KAAMC,IACNC,IAAKV,IAKHW,EAAmBrC,OAAOsC,sCAAwCC,IAClEC,EAAQC,YAAYd,EAAUU,EAAiBK,YAAgBC,OAErE3C,OAAO4C,UAAYJ,EAEJA,kECIAK,EA3BA,SAACpM,GACZ,OACIqM,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMlD,KAClBiD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMnD,MAClBkD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAG,WACHC,gBAAiBH,IAAMjD,QADhC,WADJ,KAIAgD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMnD,MAClBkD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAiBH,IAAMjD,QAA5C,UAEJgD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMnD,MAClBkD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAG,WAAWC,gBAAiBH,IAAMjD,QAA9C,aAEJgD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMnD,MAClBkD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAG,QAAQC,gBAAiBH,IAAMjD,QAA3C,SAEJgD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMnD,MAClBkD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAG,SAASC,gBAAiBH,IAAMjD,QAA5C,UAEJgD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAMnD,MAClBkD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAG,YAAYC,gBAAiBH,IAAMjD,QAA/C,eCbDqD,EARD,WACV,OACIL,EAAA9L,EAAAC,cAAA,qBCMOmM,EARF,WACT,OACIN,EAAA9L,EAAAC,cAAA,oBCMOoM,EARE,WACb,OACIP,EAAA9L,EAAAC,cAAA,iDC8COqM,EAjDgB,SAAC7M,GAAU,IAAA8M,EAKRC,oBAAS,GALDC,EAAA/M,OAAAgN,EAAA,EAAAhN,CAAA6M,EAAA,GAKjCI,EALiCF,EAAA,GAKvBG,EALuBH,EAAA,GAAAI,EAMbL,mBAAS/M,EAAMmI,QANFkF,EAAApN,OAAAgN,EAAA,EAAAhN,CAAAmN,EAAA,GAMjCjF,EANiCkF,EAAA,GAMzBC,EANyBD,EAAA,GAQtCE,oBAAU,WACND,EAAStN,EAAMmI,SAChB,CAACnI,EAAMmI,SAeV,OACIkE,EAAA9L,EAAAC,cAAA,YACM0M,GACFb,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,QAAMgN,cAjBO,WACrBL,GAAY,KAgBJ,IACKnN,EAAMmI,QAAU,cAKxB+E,GACDb,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,SACIiN,OAtBW,WACvBN,GAAY,GACZnN,EAAMkI,aAAaC,IAqBPuF,SAlBO,SAACC,GACpBL,EAASK,EAAEC,cAAcC,QAkBbA,MAAO1F,EACP2F,WAAW,mECDhBC,GAFkBC,aAAU,CAACvC,KAAM,gBAAjBuC,CAnCT,SAAAnO,GAAoC,IAAlCoO,EAAkCpO,EAAlCoO,aAAcrF,EAAoB/I,EAApB+I,QAASvI,EAAWR,EAAXQ,MAC7C,OACIgM,EAAA9L,EAAAC,cAAA,QAAM0N,SAAUD,GACZ5B,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,uBAEHH,GACDgM,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,KAAM6B,kBAAmB9N,GAEzCgM,EAAA9L,EAAAC,cAAA,yBACgBU,aAAY,YAAa,WAAY,GAAID,OAEzDoL,EAAA9L,EAAAC,cAAA,iCACwBU,aAAY,GAAI,iBAAkB,GAAID,KAAO,CAACmB,KAAM,cAE5EiK,EAAA9L,EAAAC,cAAA,sCAEaU,aAAY,yBAA0B,4BAA6B,GAAIL,OAEpFwL,EAAA9L,EAAAC,cAAA,wBACeU,aAAY,WAAY,UAAW,GAAIL,OAEtDwL,EAAA9L,EAAAC,cAAA,wBACeP,OAAOmO,KAAKxF,EAAQyF,UAAUhI,IAAI,SAAAiI,GAC7C,OACIjC,EAAA9L,EAAAC,cAAA,OAAK8N,IAAKA,GACLA,EADL,MACapN,aAAY,GAAI,YAAcoN,EAAK,GAAIrN,aC6BlEsN,GAAc,SAAAzJ,GAAsC,IAApC8D,EAAoC9D,EAApC8D,QAAS4F,EAA2B1J,EAA3B0J,QAASC,EAAkB3J,EAAlB2J,aACpC,OACIpC,EAAA9L,EAAAC,cAAA,WACKgO,GACDnC,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,UAAQkO,QAASD,GAAjB,SAIJpC,EAAA9L,EAAAC,cAAA,yBACgBoI,EAAQ+F,UAExBtC,EAAA9L,EAAAC,cAAA,iCACwBoI,EAAQgG,eAAiB,MAAQ,MAExDhG,EAAQgG,gBACTvC,EAAA9L,EAAAC,cAAA,sCAC6BoI,EAAQiG,2BAErCxC,EAAA9L,EAAAC,cAAA,wBACeoI,EAAQkG,SAEvBzC,EAAA9L,EAAAC,cAAA,wBACeP,OAAOmO,KAAKxF,EAAQyF,UAAUhI,IAAI,SAAAiI,GAC7C,OAAOjC,EAAA9L,EAAAC,cAACuO,GAAD,CAAST,IAAKA,EAAKU,aAAcV,EAAKW,aAAcrG,EAAQyF,SAASC,UAOtFY,GAAU,SAAAzJ,GAAkC,IAAhCuJ,EAAgCvJ,EAAhCuJ,aAAcC,EAAkBxJ,EAAlBwJ,aAC5B,OAAO5C,EAAA9L,EAAAC,cAAA,WACFwO,EADE,KACcC,IAIVE,GAzFK,SAAAtP,GAAsE,IAApE+I,EAAoE/I,EAApE+I,QAAST,EAA2DtI,EAA3DsI,OAAQD,EAAmDrI,EAAnDqI,aAAcsG,EAAqC3O,EAArC2O,QAASnG,EAA4BxI,EAA5BwI,UAAWM,EAAiB9I,EAAjB8I,YAAiBmE,EACxDC,oBAAS,GAD+CC,EAAA/M,OAAAgN,EAAA,EAAAhN,CAAA6M,EAAA,GACjFI,EADiFF,EAAA,GACvEG,EADuEH,EAAA,GAUtF,IAAKpE,EACD,OAAOyD,EAAA9L,EAAAC,cAAC4O,EAAA,EAAD,MASX,OACI/C,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,IAAM+C,kBAClBhD,EAAA9L,EAAAC,cAAA,OAAK8O,IAAK1G,EAAQ2B,OAAOgF,OAASC,KAAW/O,UAAW6L,IAAMmD,UAAWC,IAAI,KAE5ElB,GACDnC,EAAA9L,EAAAC,cAAA,SAAO4B,KAAK,OACLsL,SAbS,SAACC,GACrBA,EAAEgC,OAAOC,MAAMpO,QACf6G,EAAUsF,EAAEgC,OAAOC,MAAM,OAcpB1C,EACKb,EAAA9L,EAAAC,cAACqP,GAAD,CAAiBC,cAAelH,EACfA,QAASA,EACTsF,SA9BlB,SAAC6B,GACdpH,EAAYoH,GACPrI,KAAK,WACFyF,GAAY,QA6BNd,EAAA9L,EAAAC,cAACwP,GAAD,CAAapH,QAASA,EACT4F,QAASA,EACTC,aAAc,WACVtB,GAAY,MAKnCd,EAAA9L,EAAAC,cAACyP,EAAD,CACI9H,OAAQA,EACRD,aAAcA,gDCzCnBgI,GATD,SAAClQ,GACX,OACIqM,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,KAAMnD,MAClBkD,EAAA9L,EAAAC,cAAA,OAAK8O,IAAI,2DAA2DI,IAAI,UACxErD,EAAA9L,EAAAC,cAAA,SAAIR,EAAMgC,6BCAhBmO,GAAcC,aAAiB,IAE/BC,GAAUC,IAAMC,KAAK,SAAAvQ,GACvB,IAAIwQ,EAAexQ,EAAM2J,UAAUtD,IAAI,SAAAoK,GAAI,OACvCpE,EAAA9L,EAAAC,cAACkQ,GAAD,CACIpC,IAAKmC,EAAK1O,GACVC,QAASyO,EAAKzO,QACd2O,UAAWF,EAAK7G,eAQxB,OACIyC,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,KAAMsE,YAClBvE,EAAA9L,EAAAC,cAAA,sBACA6L,EAAA9L,EAAAC,cAACqQ,GAAD,CAAqB3C,SAPb,SAAC4C,GACb9Q,EAAM+Q,QAAQD,EAAO3G,gBAOjBkC,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,KAAM0E,OACjBR,MAyBbK,GAAsB7C,aAAU,CAChCvC,KAAM,yBADgBuC,CAlBL,SAAChO,GAClB,OACIqM,EAAA9L,EAAAC,cAAA,QAAM0N,SAAUlO,EAAMiO,cAClB5B,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAACyQ,GAAA,EAAD,CACI3P,UAAWT,KACXO,KAAK,cACLQ,SAAU,CAACsP,KAAUf,OAG7B9D,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,8BAWD6P,MCnCAc,GAFUC,YAfH,SAAC9O,GACnB,MAAO,CACHqH,UAAWrH,EAAM8I,YAAYzB,UAC7BQ,YAAa7H,EAAM8I,YAAYjB,cAId,SAACtG,GACtB,MAAO,CACHkN,QAAS,SAAC5G,GACNtG,EdgFwB,SAACsG,GAAD,MAAkB,CAAC/H,KA3FtC,WA2FsD+H,echFlDkH,CAAqBlH,OAKjBiH,CAA6Cf,ICCvDiB,GAhBC,SAAAzR,GAAsE,IAApE+I,EAAoE/I,EAApE+I,QAAST,EAA2DtI,EAA3DsI,OAAQD,EAAmDrI,EAAnDqI,aAAcsG,EAAqC3O,EAArC2O,QAASnG,EAA4BxI,EAA5BwI,UAAWM,EAAiB9I,EAAjB8I,YACjE,OACI0D,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAC+Q,GAAD,CACI5I,YAAaA,EACbN,UAAWA,EACXmG,QAASA,EACT5F,QAASA,EACTT,OAAQA,EACRD,aAAcA,IAElBmE,EAAA9L,EAAAC,cAACgR,GAAD,QCPNC,4LAEE,IAAItO,EAASyB,KAAK5E,MAAM0J,MAAMgI,OAAOvO,OAChCA,IACDA,EAASyB,KAAK5E,MAAM2R,mBAEhB/M,KAAK5E,MAAM4R,QAAQC,KAAK,UAGhCjN,KAAK5E,MAAM8J,eAAe3G,GAC1ByB,KAAK5E,MAAMiI,UAAU9E,+CAIrByB,KAAKkN,4DAGUC,GACXnN,KAAK5E,MAAM0J,MAAMgI,OAAOvO,SAAW4O,EAAUrI,MAAMgI,OAAOvO,QAC1DyB,KAAKkN,kDAKT,OACIzF,EAAA9L,EAAAC,cAACwR,GAAD/R,OAAAe,OAAA,GAAa4D,KAAK5E,MAAlB,CACSwO,SAAU5J,KAAK5E,MAAM0J,MAAMgI,OAAOvO,OAClCyF,QAAShE,KAAK5E,MAAM4I,QACpBT,OAAQvD,KAAK5E,MAAMmI,OACnBD,aAActD,KAAK5E,MAAMkI,aACzBG,UAAWzD,KAAK5E,MAAMqI,oBA9BZiI,IAAM2B,WA2CtBnG,eACXsF,YARkB,SAAC9O,GAAD,MAAY,CAC9BsG,QAAStG,EAAM8I,YAAYxC,QAC3BT,OAAQ7F,EAAM8I,YAAYjD,OAC1BwJ,iBAAkBrP,EAAMkJ,KAAKrI,OAC7BsH,OAAQnI,EAAMkJ,KAAKf,SAIM,CAACX,iBAAgB7B,UhBsDrB,SAAC9E,GAAD,sBAAA2B,EAAA7E,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAY,SAAAoB,EAAOlB,GAAP,IAAAC,EAAA,OAAAkG,EAAAzJ,EAAAwD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACZ8C,IAAWiB,UAAU9E,GADT,OAC7BW,EAD6BoB,EAAAb,KAEjCR,EAASgG,EAAU/F,EAAS6D,OAFK,wBAAAzC,EAAAT,SAAAM,MAAZ,gBAAAK,GAAA,OAAAN,EAAAH,MAAAC,KAAArD,YAAA,IgBtDgC2G,ahB2D7B,SAACC,GAAD,sBAAA1C,EAAAxF,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAY,SAAA+B,EAAO7B,GAAP,OAAAmG,EAAAzJ,EAAAwD,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACf8C,IAAWkB,aAAaC,GADT,OAEH,IAFGxC,EAAAtB,KAEvBsD,KAAKxC,YACdtB,EAASgG,EAAU1B,IAHa,wBAAAxC,EAAAlB,SAAAiB,MAAZ,gBAAAL,GAAA,OAAAI,EAAAd,MAAAC,KAAArD,YAAA,IgB3D2C8G,UhBiE9C,SAAC6J,GAAD,sBAAAnM,EAAA9F,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAU,SAAAqC,EAAOnC,GAAP,IAAAC,EAAA,OAAAkG,EAAAzJ,EAAAwD,KAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EACV8C,IAAWqB,UAAU6J,GADX,OAEE,KAD7BpO,EAD2BmC,EAAA5B,MAElBsD,KAAKxC,YACdtB,EAtBqC,CAACzB,KA3FnB,qBA2F6CmI,OAsBtCzG,EAAS6D,KAAKA,KAAK4C,SAHlB,wBAAAtE,EAAAxB,SAAAuB,MAAV,gBAAAV,GAAA,OAAAS,EAAApB,MAAAC,KAAArD,YAAA,IgBjEyDoH,YhBuEvD,SAACC,GAAD,sBAAAuJ,EAAAlS,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAa,SAAAyO,EAAOvO,EAAUwO,GAAjB,IAAAlP,EAAAW,EAAA,OAAAkG,EAAAzJ,EAAAwD,KAAA,SAAAuO,GAAA,cAAAA,EAAArO,KAAAqO,EAAApO,MAAA,cAC9Bf,EAASkP,IAAW7G,KAAKrI,OADKmP,EAAApO,KAAA,EAEf8C,IAAW2B,YAAYC,GAFR,UAGH,KAD7B9E,EAFgCwO,EAAAjO,MAGvBsD,KAAKxC,WAHkB,CAAAmN,EAAApO,KAAA,QAIhCL,EAASiG,EAAe3G,IAJQmP,EAAApO,KAAA,uBAMhCL,EAAS0O,YAAW,eAAgB,CAACC,OAAQ1O,EAAS6D,KAAK8K,SAAS,MANpCH,EAAAI,OAAA,SAOzBC,QAAQC,OAAO9O,EAAS6D,KAAK8K,SAAS,KAPb,yBAAAH,EAAA7N,SAAA2N,MAAb,gBAAA7M,EAAAM,GAAA,OAAAsM,EAAAxN,MAAAC,KAAArD,YAAA,MgBtEvBsR,IAFW/G,CAGb2F,wBCpCaqB,GAbA,SAAC9S,GACZ,OACIqM,EAAA9L,EAAAC,cAAA,UAAQC,UAAW6L,KAAMyG,QACrB1G,EAAA9L,EAAAC,cAAA,OAAK8O,IAAI,yEAAyEI,IAAI,SACtFrD,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,KAAM0G,YACjBhT,EAAMyK,OACD4B,EAAA9L,EAAAC,cAAA,WAAMR,EAAM8I,MAAZ,MAAqBuD,EAAA9L,EAAAC,cAAA,UAAQkO,QAAS1O,EAAMkJ,QAAvB,YACrBmD,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CAASC,GAAI,UAAb,YCPhByG,oLAEE,OAAO5G,EAAA9L,EAAAC,cAAC0S,GAAWtO,KAAK5E,cAFFsQ,IAAM2B,WAWrBb,eALS,SAAC9O,GAAD,MAAY,CAChCmI,OAAQnI,EAAMkJ,KAAKf,OACnB3B,MAAOxG,EAAMkJ,KAAK1C,QAGkB,CACpCI,OhBkCkB,iCAAAzD,EAAAxF,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAM,SAAA+B,EAAO7B,GAAP,OAAAmG,EAAAzJ,EAAAwD,KAAA,SAAA4B,GAAA,cAAAA,EAAA1B,KAAA0B,EAAAzB,MAAA,cAAAyB,EAAAzB,KAAA,EACH+C,IAAQiC,SADL,OAES,IAFTvD,EAAAtB,KAEXsD,KAAKxC,YACdtB,EAAS6G,EAAgB,KAAM,KAAM,MAAM,IAHvB,wBAAA/E,EAAAlB,SAAAiB,MAAN,gBAAAL,GAAA,OAAAI,EAAAd,MAAAC,KAAArD,YAAA,KgBnCP6P,CAEZ6B,ICgCGE,GAAiBnF,aAAU,CAE7BvC,KAAM,SAFauC,CAzCL,SAAAnO,GAA2B,IAAzBoO,EAAyBpO,EAAzBoO,aAAc5N,EAAWR,EAAXQ,MAC9B,OACIgM,EAAA9L,EAAAC,cAAA,QACI0N,SAAUD,GADd,IAEI5B,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAACyQ,GAAA,EAAD,CACI3P,UAAWL,KACXE,YAAa,QACbC,KAAM,QACNQ,SAAU,CAACsP,SAGnB7E,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAACyQ,GAAA,EAAD,CACI3P,UAAWL,KACXE,YAAa,WACbiB,KAAM,WACNhB,KAAM,WACNQ,SAAU,CAACsP,SAGnB7E,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAACyQ,GAAA,EAAD,CACI3P,UAAWL,KACXmB,KAAM,WACNhB,KAAM,eAJd,gBAQCf,GAASgM,EAAA9L,EAAAC,cAAA,OAAKC,UAAW6L,KAAM6B,kBAAtB,IACL9N,GAGLgM,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,yBACA6L,EAAA9L,EAAAC,cAAA,cAAQ6L,EAAA9L,EAAAC,cAAA,KAAG4S,KAAK,+CAAR,gBAiCThC,eAJS,SAAC9O,GAAD,MAAY,CAChCmI,OAAQnI,EAAMkJ,KAAKf,SAGiB,CAAC3B,MjBrCpB,SAACC,EAAOC,EAAUC,GAAlB,sBAAAnE,EAAA7E,OAAA8J,EAAA,EAAA9J,CAAA+J,EAAAzJ,EAAAoD,KAAiC,SAAAoB,EAAOlB,GAAP,IAAAC,EAAA9B,EAAA,OAAAgI,EAAAzJ,EAAAwD,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EAC7B+C,IAAQ6B,MAAMC,EAAOC,EAAUC,GADF,OAEjB,KAD7BnF,EAD8CoB,EAAAb,MAErCsD,KAAKxC,WACdtB,EAAS+G,MAEL5I,EAAU8B,EAAS6D,KAAK8K,SAASjR,OAAS,EAAIsC,EAAS6D,KAAK8K,SAAS,GAAK,aAC9E5O,EAAS0O,YAAW,QAAS,CAACC,OAAQxQ,MANQ,wBAAAkD,EAAAT,SAAAM,MAAjC,gBAAAK,GAAA,OAAAN,EAAAH,MAAAC,KAAArD,YAAA,KiBqCN6P,CArBD,SAACpR,GAKX,OAAIA,EAAMyK,OACC4B,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAU7G,GAAI,aAIrBH,EAAA9L,EAAAC,cAAA,WACI6L,EAAA9L,EAAAC,cAAA,mBACA6L,EAAA9L,EAAAC,cAAC2S,GAAD,CAAgBjF,SAXP,SAAC3F,GACdvI,EAAM8I,MAAMP,EAASQ,MAAOR,EAASS,SAAUT,EAASU,kBCzC1DqK,GAAmBhD,IAAMiD,KAAK,kBAAM3M,EAAA+G,EAAA,GAAAjG,KAAAd,EAAAhB,KAAA,aACpC4N,GAAiBlD,IAAMiD,KAAK,kBAAM3M,EAAA+G,EAAA,GAAAjG,KAAAd,EAAAhB,KAAA,aAElC6N,+LAEE7O,KAAK5E,MAAM0T,iDAIX,OAAK9O,KAAK5E,MAAMgL,YAIZqB,EAAA9L,EAAAC,cAAA,OAAKC,UAAU,eACX4L,EAAA9L,EAAAC,cAACmT,GAAD,MACAtH,EAAA9L,EAAAC,cAACoT,EAAD,MACAvH,EAAA9L,EAAAC,cAAA,OAAKC,UAAU,uBACX4L,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOQ,OAAK,EAACC,KAAK,oBAAoBC,OAAQ,kBAC1C1H,EAAA9L,EAAAC,cAACwT,GAAD,SAFR,IAGI3H,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOQ,OAAK,EAACC,KAAK,WAAWC,OAAQ,WACjC,OAAO1H,EAAA9L,EAAAC,cAACyT,EAAA,SAAD,CACHC,SACI7H,EAAA9L,EAAAC,cAAC4O,EAAA,EAAD,OAFD,IAGH/C,EAAA9L,EAAAC,cAAC8S,GAAD,UAGRjH,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOQ,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAC9B1H,EAAA9L,EAAAC,cAAC2T,EAAD,SAXR,IAYI9H,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOS,KAAK,SAASC,OAAQ,kBAAM1H,EAAA9L,EAAAC,cAAC4T,EAAD,SACnC/H,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOS,KAAK,YAAYC,OAAQ,kBAAM1H,EAAA9L,EAAAC,cAAC6T,EAAD,SACtChI,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOS,KAAK,SACLC,QC7CC9B,ED6CoBuB,GC5CrC,SAACxT,GACJ,OAAOqM,EAAA9L,EAAAC,cAACyT,EAAA,SAAD,CAAUC,SAAU7H,EAAA9L,EAAAC,cAAC4O,EAAA,EAAD,OACvB/C,EAAA9L,EAAAC,cAACyR,EAAcjS,QD2BX,IAgBIqM,EAAA9L,EAAAC,cAAC6S,EAAA,EAAD,CAAOS,KAAK,SAASC,OAAQ,kBAAM1H,EAAA9L,EAAAC,cAAC8T,GAAD,WAtBpCjI,EAAA9L,EAAAC,cAAC4O,EAAA,EAAD,MCxBS,IAAA6C,SDiBVA,aAwCZsC,GAAezI,YACjB+G,IACAzB,YANoB,SAAC9O,GAAD,MAAY,CAChC0I,YAAa1I,EAAMqJ,IAAIX,cAKE,CACrB0I,cjBvCqB,kBAAM,SAAA7P,GAC/B,IAAI2Q,EAAU3Q,EAAS+G,KACvB+H,QAAQ8B,IAAI,CAACD,IACR9M,KAAK,WACF7D,EAN6B,CAACzB,KApBd,8BiB0DP0J,CAKnB2H,IAgBaiB,GAdC,WACZ,OACIrI,EAAA9L,EAAAC,cAAC+L,EAAA,EAAD,CACIoI,SAAUC,yBADd,IAEIvI,EAAA9L,EAAAC,cAACqU,EAAA,EAAD,CAAU9I,MAAOA,GAAjB,IACIM,EAAA9L,EAAAC,cAAC+T,GAAD,SEnEhBO,IAASf,OAAO1H,EAAA9L,EAAAC,cAACuU,GAAD,MAAYC,SAASC,eAAe,SvB4H5C,kBAAmBC,WACnBA,UAAUC,cAAcC,MAAM1N,KAAK,SAAA2N,GAC/BA,EAAaC,gDwBnIzB,IAAAC,EAAA3O,EAAA,GAAA4O,EAAA5O,EAAA6O,EAAAF,GAAAG,EAAA9O,EAAA,KAAA+O,EAAA/O,EAAA6O,EAAAC,GAYetG,IARC,SAACpP,GACb,OACIwV,EAAAjV,EAAAC,cAAA,WACIgV,EAAAjV,EAAAC,cAAA,OAAK8O,IAAKsG,IAAWlG,IAAK,oCCNtChJ,EAAAC,QAAA,CAAkBhG,YAAA,mCAAAN,MAAA,6BAAA8N,iBAAA,0ECDlBvH,EAAAE,EAAAC,EAAA,sBAAAmK,IAAAtK,EAAAE,EAAAC,EAAA,sBAAAqJ,IAAO,IAAMc,EAAW,SAACrD,GACrB,IAAIA,EACJ,MAAO,qBAGEuC,EAAmB,SAACyF,GAAD,OAAe,SAAChI,GAC5C,GAAIA,EAAMrM,OAASqU,EAAW,uBAAAnT,OAAwBmT,EAAxB,kCCLlCnP,EAAAC,QAAA,CAAkB0I,iBAAA,sCAAAI,UAAA,oDCAlB/I,EAAAC,QAAA,CAAkBiK,WAAA,4BAAAI,MAAA,4CCAlBtK,EAAAC,QAAA,CAAkBoM,OAAA,uBAAAC,WAAA","file":"static/js/main.41ed5b38.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './FormsControls.module.css';\nimport {Field} from \"redux-form\";\n\n// форм криэйтер\nconst FormControl = ({input, meta, ...props}) => { // *из-за библиотеки приходят сюда не стандартные props, а объект с input и meta\n    const hasError = meta.touched && meta.error; // **из meta приходят touched и error, сохраняем\n    return (\n        <div\n            className={styles.formControl + ' ' + (hasError ? styles.error : \"\")}> {/* **если пришли, то применить этот стиль */}\n            <div>\n                {props.children} {/* сюда придут input или textarea */}\n            </div>\n            {hasError && <span>{meta.error}</span>} {/* **если пришли, то показать элемент */}\n        </div>\n    )\n};\n\n// формы\nexport const TextArea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}>\n        <textarea {...input} {...restProps}/> {/*  *поэтому надо деструктуризировать передаваемые данные  */}\n    </FormControl>\n};\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}>\n        <input {...input} {...restProps}/>\n    </FormControl>\n};\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field\n            placeholder={placeholder}\n            name={name}\n            validate={validators}\n            component={component}\n            {...props}\n        /> {text}\n    </div>\n);\n\n\n","const SEND_MESSAGE = 'SEND_MESSAGE';\n\nlet initialState = {\n    messagesData: [\n        {\n            id: 1,\n            message: '111'\n        },\n        {\n            id: 2,\n            message: '222'\n        },\n        {\n            id: 3,\n            message: '333'\n        },\n        {\n            id: 4,\n            message: '444'\n        },\n        {\n            id: 5,\n            message: '555'\n        },\n        {\n            id: 6,\n            message: '666'\n        }\n    ],\n\n    dialogsData: [\n        {\n            id: 1,\n            name: 'Andrew'\n        },\n        {\n            id: 2,\n            name: 'Sveta'\n        },\n        {\n            id: 3,\n            name: 'Maxim'\n        },\n        {\n            id: 4,\n            name: 'Igor'\n        },\n        {\n            id: 5,\n            name: 'Ivan'\n        },\n        {\n            id: 6,\n            name: 'Anton'\n        }\n    ]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SEND_MESSAGE: {\n            let body = action.newMessageBody;\n            return {\n                ...state,\n                messagesData: [...state.messagesData, {id: 7, message: body}], // скопировали массив и запушили в конец новый объект\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody});\n\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [], //сюда попадет айди пользователя\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => { // идентичная запись users: [...state.users], но не получится запустить проверку\n                    if (user.id === action.userId) {\n                        return {...user, followed: true}\n                    }\n                    return user;\n                })\n            };\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: state.users.map(user => {\n                    if (user.id === action.userId) {\n                        return {...user, followed: false}\n                    }\n                    return user;\n                })\n            };\n        case SET_USERS:\n            return {...state, users: action.users};\n        case SET_CURRENT_PAGE:\n            return {...state, currentPage: action.currentPage};\n        case SET_TOTAL_USERS_COUNT:\n            return {...state, totalUsersCount: action.count};\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            return {\n                ...state,\n                followingInProgress: action.isFetching // если тру, то\n                    ? [...state.followingInProgress, action.userId] // добавить в массив выбранный айди\n                    : state.followingInProgress.filter(id => id !== action.userId) // записать только те айди, что не равны выбранному\n            };\n        default:\n            return state;\n    }\n};\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId});\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId});\nexport const setUsers = (users) => ({type: SET_USERS, users});\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount});\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n});\n\n// санк криэйтор, принимает в себя данные из вне и через замыкание передает в санку\nexport const getUsersThunkCreator = (currentPage, pageSize) =>\n    async (dispatch) => { // сама санка.\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(currentPage));\n        let response = await usersAPI.getUsers(currentPage, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(response.items));\n        dispatch(setTotalUsersCount(response.totalCount));\n    };\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(userId))\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n};\n\nexport const follow = (userId) => async (dispatch) => {\n       await followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\n    };\n\nexport const unfollow = (userId) => async (dispatch) => {\n       await followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\n    };\n\nexport default usersReducer;","module.exports = __webpack_public_path__ + \"static/media/User.52e4201e.png\";","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: { // заголовки, что всегда отправляются\\возвращаются сервером при запросе\n        'API-KEY': '1485309f-39bf-4f40-bd50-88a179c90f9c'\n    }\n});\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`) // параметры придут из контейнерной компоненты\n            .then(response => response.data); // необязательный респонс. Реализует прокидываение только тех данных, что использует компонента и ничего больше.\n    },\n\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n            .then(response => response.data);\n    },\n\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n            .then(response => response.data);\n    },\n\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.');\n        return profileAPI.getProfile(userId); // обратная совместимость на другую АПИ.\n    }\n};\n\nexport const profileAPI = {\n\n    getProfile(userId) {\n        return instance.get(`profile/` + userId) // приходит из withRouter\n            .then(response => response.data);\n    },\n\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n\n    updateStatus(status) {\n        return instance.put(`profile/status`, {status: status}); // или просто , {status}\n    },\n    savePhoto(photoFile) { // чтобы отправить файл на сервер, нужно сформировать объект даты\n        const formData = new FormData(); // формируем объект\n        formData.append(\"image\", photoFile); // добавляем в конец файл изображения\n        return instance.put(`profile/photo`, formData, { // отправляем на сервер по такому пути, такой объект, с такими настройками заголовков\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n    },\n    saveProfile(profile) {\n        return instance.put(`profile/`, profile);\n    }\n};\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`)\n            .then(response => response.data);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout() {\n        return instance.delete(`auth/login`)\n    },\n\n};\n\n","module.exports = __webpack_public_path__ + \"static/media/loader.3ca1c911.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Posts_item__y9YXG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"active\":\"Navbar_active__3mbhk\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = 'ADD-POST'; // констатны action type\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nconst DELETE_POST = 'DELETE_POST';\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS';\n\nlet initialState = {\n    postsData: [\n        {\n            id: 1,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 2,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 3,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 4,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 5,\n            message: 'qwe',\n            likesCount: 10\n        },\n        {\n            id: 6,\n            message: 'qwe',\n            likesCount: 10\n        }\n    ],\n    profile: null,\n    status: '',\n}; // инициалиационный стейт, пока не получили актуальный с сервера\n\n//reducer\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 7,\n                message: action.newPostText,\n                likesCount: 0\n            };\n            return {\n                ...state,// обязательно делать копию стейта перед изменениями\n                postsData: [...state.postsData, newPost], // не забывать делать глубокую копию (плюс опционально добавляется в конец массива новый объект)\n                newPostText: ''\n            };\n        }\n        case SET_USER_PROFILE: {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case SET_STATUS: {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        case DELETE_POST: {\n            return {\n                ...state,\n                postsData: state.postsData.filter(p => p.id !== action.postId)\n            }\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {\n                ...state,\n                profile: {\n                    ...state.profile,\n                    photos: action.photos\n                }\n            }\n        }\n        default:\n            return state;\n    }\n};\n\n//action creator\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText});\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile});\nexport const setStatus = (status) => ({type: SET_STATUS, status});\nexport const deletePost = (postId) => ({type: DELETE_POST, postId});\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos});\n\n//thunk-creator => thunk => {api.then.dispatch(action-creator)}\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId);\n    dispatch(setUserProfile(response));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n    dispatch(setStatus(response.data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n    }\n};\nexport const savePhoto = (file) => async (dispatch) => {\n    let response = await profileAPI.savePhoto(file);\n    if (response.data.resultCode === 0) {\n        dispatch(savePhotoSuccess(response.data.data.photos));\n    }\n};\nexport const saveProfile = (profile) => async (dispatch, getState) => {\n    const userId = getState().auth.userId;\n    let response = await profileAPI.saveProfile(profile);\n    if (response.data.resultCode === 0) {\n        dispatch(getUserProfile(userId));\n    } else {\n        dispatch(stopSubmit('edit-profile', {_error: response.data.messages[0]}));\n        return Promise.reject(response.data.messages[0]);\n    }\n};\n\nexport default profileReducer;","let initialState = {\n\n};\n\nconst sidebarReducer = (state = initialState, action) => {\n\n\n    return state;\n};\n\nexport default sidebarReducer;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isFetching: false,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA,\n    payload: {userId, email, login, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.resultCode === 0) { // промис уходит в app-reducer\n        let {id, login, email} = response.data; // объект формируется axios, обязательно сверится store.getState().auth\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n};\n\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'; // запрос текста ошибки с АПИ\n        dispatch(stopSubmit('login', {_error: message})); // прекращает сабмит формы по имени name и показывает ошибку на всю форму (можно указывать конкретное поле в объекте)\n    }\n};\n\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n};\n\nexport default authReducer;\n","import {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => dispatch => {  // пришел промис из auth-reducer\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());  // дождаться всех и только потом проинициализироваться\n        })\n};\n\nexport default appReducer;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reducer\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport {reducer as formReducer} from 'redux-form';\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({ // прокидывает редьюсеры, можно воспринимать как стейт\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    form: formReducer,\n    app: appReducer,\n});\n\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware)); //обычное подключение\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; // с расширением redux\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nwindow.__store__ = store;\n\nexport default store;","import React from 'react';\nimport style from './Navbar.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Navbar = (props) => {\n    return (\n        <nav className={style.nav}>\n            <div className={style.item}>\n                <NavLink to=\"/profile\"\n                         activeClassName={style.active}>Profile</NavLink> {/*  замена тега <a/>, отличие: не перезагружает страницу при переходе */}\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/users\" activeClassName={style.active}>Users</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/dialogs\" activeClassName={style.active}>Messages</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/news\" activeClassName={style.active}>News</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/music\" activeClassName={style.active}>Music</NavLink>\n            </div>\n            <div className={style.item}>\n                <NavLink to=\"/settings\" activeClassName={style.active}>Settings</NavLink>\n            </div>\n        </nav>\n\n    )\n};\n\nexport default Navbar\n\n\n","import React from 'react';\n\n\nconst Music = () => {\n    return (\n        <div>\n            music\n        </div>\n    )\n};\n\nexport default Music","import React from 'react';\n\n\nconst News = () => {\n    return (\n        <div>\n            news\n        </div>\n    )\n};\n\nexport default News","import React from 'react';\n\n\nconst Settings = () => {\n    return (\n        <div>\n            settings\n        </div>\n    )\n};\n\nexport default Settings","import React, {useState, useEffect} from 'react';\n\nconst ProfileStatusWithHooks = (props) => { // создаем функциональную компоненту на хуках\n    /*  let stateWithSetState = useState(false); // useState() возвращает массив из 2х элементов\n        let editMode = stateWithSetState[0]; // первый элемент это часть переданного стейта\n        let setEditMode = stateWithSetState[1]; // второй это функция, что будет изменять первый элемент*/\n\n    let [editMode, setEditMode] = useState(false); // современный синтаксис с деструктурированным присваниванием\n    let [status, setStaus] = useState(props.status); // useState достает из props status и присваивает первому элементу, плюс объявляет функцию, что следит за ним\n\n    useEffect(() => { // хук useEffect.\n        setStaus(props.status); //Запускается после рендера и ререндерит после изменения зависимости\n    }, [props.status]); // зависимость. Нежелательно, но возможно оставить пустым массивом\n\n    const activateEditMode = () => {\n        setEditMode(true) // меняет editMode на true\n    };\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status)\n    };\n\n    const onStatusChange = (e) => {\n        setStaus(e.currentTarget.value);\n    };\n\n    return (\n        <div>\n            {!editMode && // если false то показать span\n            <div>\n                <span onDoubleClick={activateEditMode}> {/* вызов функции по двойному клику */}\n                    {props.status || \"no status\"}\n                </span>\n            </div>\n            }\n\n            {editMode && // если true то показать div\n            <div>\n                <input\n                    onBlur={deactivateEditMode}\n                    onChange={onStatusChange}\n                    value={status}\n                    autoFocus={true} // при клике на элемент, сразу активирует поле ввода\n                />\n            </div>\n            }\n        </div>\n    )\n};\n\nexport default ProfileStatusWithHooks;","import React from \"react\";\nimport {createField, Input, TextArea} from \"../../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\nimport style from \"../../../common/FormsControls/FormsControls.module.css\";\n\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <button>Save</button>\n            </div>\n            {error &&\n            <div className={style.formSummaryError}>{error}</div>\n            }\n            <div>\n                Full name: {createField(\"Full name\", \"fullName\", [], Input)}\n            </div>\n            <div>\n                Looking for a job: {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\n            </div>\n            <div>\n                My professional\n                skills: {createField(\"My professional skills\", \"lookingForAJobDescription\", [], TextArea)}\n            </div>\n            <div>\n                About me: {createField(\"About me\", \"aboutMe\", [], TextArea)}\n            </div>\n            <div>\n                Contacts: {Object.keys(profile.contacts).map(key => { // итерируем объект и создаем список контактной информации\n                return (\n                    <div key={key}>\n                        {key} : {createField(\"\", \"fullName.\" + key, [], Input)}\n                    </div>\n                )\n            })}\n            </div>\n        </form>\n    )\n};\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\n\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\nimport style from './ProfileInfo.module.css';\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../../assets/images/User.png\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\n\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n    let [editMode, setEditMode] = useState(false);\n\n    const onSubmit = (formdata) => {\n        saveProfile(formdata) // санк криэйторы возвращают промис\n            .then(() => {\n                setEditMode(false);\n            })\n    };\n\n    if (!profile) {\n        return <Preloader/>\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {  // если есть массив переданных файлов\n            savePhoto(e.target.files[0]); // то запушить изображение\n        }\n    };\n\n    return (\n        <div>\n            <div className={style.descriptionBlock}>\n                <img src={profile.photos.small || userPhoto} className={style.mainPhoto} alt=\"\"/>\n\n                {isOwner && // если моя страница, то показать инпут загрузки\n                <input type=\"file\"\n                       onChange={onMainPhotoSelected}\n                />}\n\n                {editMode\n                    ? <ProfileDataForm initialValues={profile}\n                                       profile={profile}\n                                       onSubmit={onSubmit}\n                    />\n                    : <ProfileData profile={profile}\n                                   isOwner={isOwner}\n                                   goToEditMode={() => {\n                                       setEditMode(true)\n                                   }}\n                    />\n                }\n\n                <ProfileStatusWithHooks\n                    status={status}\n                    updateStatus={updateStatus}\n                />\n            </div>\n        </div>\n    )\n};\n\nconst ProfileData = ({profile, isOwner, goToEditMode}) => {\n    return (\n        <div>\n            {isOwner &&\n            <div>\n                <button onClick={goToEditMode}>\n                    Edit\n                </button>\n            </div>}\n            <div>\n                Full name: {profile.fullName}\n            </div>\n            <div>\n                Looking for a job: {profile.lookingForAJob ? 'yes' : 'no'}\n            </div>\n            {profile.lookingForAJob &&\n            <div>\n                My professional skills: {profile.lookingForAJobDescription}\n            </div>}\n            <div>\n                About me: {profile.aboutMe}\n            </div>\n            <div>\n                Contacts: {Object.keys(profile.contacts).map(key => { // итерируем объект и создаем список контактной информации\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\n            })}\n            </div>\n        </div>\n    )\n};\n\nconst Contact = ({contactTitle, contactValue}) => {\n    return <div>\n        {contactTitle}: {contactValue}\n    </div>\n};\n\nexport default ProfileInfo;","import React from 'react';\nimport style from './Posts.module.css';\n\nconst Posts = (props) => {\n    return (\n        <div className={style.item}>\n            <img src=\"https://cdn2.img.inosmi.ru/images/24413/79/244137985.jpg\" alt=\"tramp\"/>\n            <p>{props.message}</p>\n        </div>\n    )\n};\n\nexport default Posts;","import React from 'react';\nimport style from './MyPosts.module.css';\nimport Posts from \"./Post/Posts\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10); // настройка валидатора\n\nconst MyPosts = React.memo(props => { // c оптимизацией рендера React.memo\n    let postsElement = props.postsData.map(elem =>\n        <Posts\n            key={elem.id}\n            message={elem.message}\n            likeCount={elem.likesCount}\n        />\n    );\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    };\n\n    return (\n        <div className={style.postsBlock}>\n            <h3>My Posts</h3>\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\n            <div className={style.posts}>\n                {postsElement}\n            </div>\n        </div>\n    )\n\n});\n\nlet AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field\n                    component={TextArea} // импорт компоненты формы\n                    name='newPostText'\n                    validate={[required, maxLength10]} // подключение с переменной\n                />\n            </div>\n            <div>\n                <button>Add post</button>\n            </div>\n\n        </form>\n    )\n};\n\nlet AddNewPostFormRedux = reduxForm({\n    form: \"ProfileAddNewPostForm\"\n})(AddNewPostForm);\n\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        postsData: state.profilePage.postsData,\n        newPostText: state.profilePage.newPostText\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./MyPosts/ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\n    return (\n        <div>\n            <ProfileInfo\n                saveProfile={saveProfile}\n                savePhoto={savePhoto}\n                isOwner={isOwner}\n                profile={profile}\n                status={status}\n                updateStatus={updateStatus}\n            />\n            <MyPostsContainer/>\n        </div>\n    )\n};\n\nexport default Profile","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus, savePhoto, saveProfile} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    refreshProfile() {\n        let userId = this.props.match.params.userId; // withRouter даёт объект, где сидят данные .match.params.userId\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push('/login') // если не оказалось подходящего пользователя редирект на логин\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.refreshProfile();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.userId !== prevProps.match.params.userId)\n            this.refreshProfile();\n    }\n\n\n    render() {\n        return (\n            <Profile {...this.props}\n                     isOwner={!this.props.match.params.userId}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}\n                     savePhoto={this.props.savePhoto}\n            />\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\n    withRouter,\n)(ProfileContainer);","import React from 'react';\nimport style from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\n\nconst Header = (props) => {\n    return (\n        <header className={style.header}>\n            <img src=\"https://about.canva.com/wp-content/uploads/sites/3/2016/08/logos-1.png\" alt=\"logo\"/>\n            <div className={style.loginBlock}>\n                {props.isAuth\n                    ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div>\n                    : <NavLink to={'/login'}>Login</NavLink>}\n            </div>\n        </header>\n    )\n};\n\nexport default Header","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n    render() {\n        return <Header {...this.props}/>\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {\n    logout\n})(HeaderContainer);\n\n\n","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from '../common/FormsControls/FormsControls.module.css'\n\nconst LoginForm = ({handleSubmit, error}) => { // деструктуризация props, берем только нужное оттуда\n    return (\n        <form\n            onSubmit={handleSubmit}> {/* отменяет перезагрузку страницы при отправке формы, собирает все данные из формы */}\n            <div>\n                <Field\n                    component={Input} // импорт компоненты формы\n                    placeholder={\"email\"}\n                    name={\"email\"}\n                    validate={[required]} // подключение валидатора\n                />\n            </div>\n            <div>\n                <Field\n                    component={Input}\n                    placeholder={\"password\"}\n                    type={\"password\"}\n                    name={\"password\"}\n                    validate={[required]}\n                />\n            </div>\n            <div>\n                <Field\n                    component={Input}\n                    type={\"checkbox\"}\n                    name={\"rememberMe\"}\n                /> remember me\n            </div>\n\n            {error && <div className={style.formSummaryError}> {/* покажет ошибку при неверных данных логина */}\n                {error}\n            </div>}\n\n            <div>\n                <button>Sign In</button>\n                <button><a href=\"https://social-network.samuraijs.com/signUp\">Sign Up</a></button>\n            </div>\n        </form>\n    )\n};\n\nconst LoginReduxForm = reduxForm({ // вызов хок по документации\n    // вводить уникальное имя формы\n    form: 'login'\n})(LoginForm);\n\n\nconst Login = (props) => {\n    const onSubmit = (formData) => { // сюда придут все значения из формы\n        props.login(formData.email, formData.password, formData.rememberMe)\n    };\n\n    if (props.isAuth) {\n        return <Redirect to={'/profile'}/>\n    }\n\n    return (\n        <div>\n            <h1>login</h1>\n            <LoginReduxForm onSubmit={onSubmit}/>\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, {Component, Suspense} from 'react';\nimport store from \"./redux/redux-store\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport './App.css';\nimport {withSuspense} from \"./hoc/withSuspense\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\";\nimport Settings from \"./components/Settings/Settings\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\n\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); // ленивая загрузка\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer')); // ленивая загрузка\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>;\n        }\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Route exact path='/profile/:userId?' render={() => // Route указыввет по какуму пути path='/profile/:userId?' должен произойти рендер компоненты\n                        <ProfileContainer/>}/> {/* либо component={<ProfileContainer/>}, но тогда нельзя передать props */}\n                    <Route exact path='/dialogs' render={() => {\n                        return <Suspense\n                            fallback={\n                                <Preloader/>}> {/*  показывать прелоадер пока загружается компонент, лучше через хок */}\n                            <DialogsContainer/>\n                        </Suspense>\n                    }}/>\n                    <Route exact path='/news' render={() =>\n                        <News/>}/> {/* атрибут exact заставляет отрисовывать в точности как указано в конце URL, не захватывая по пути знакомые компоненты  */}\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/users'\n                           render={withSuspense(UsersContainer)}/> {/* хок для ленивой загрузки и прелоадера */}\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n});\n\nconst AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {\n        initializeApp,\n    })\n)(App);\n\nconst MainApp = () => {\n    return (\n        <BrowserRouter //позволяет использовать рендер компонент по ссылкам согласно их URL пути\n            basename={process.env.PUBLIC_URL}> {/* атрибут для настройки окружения. Дословно атрибут говорит возьми PUBLIC_URL из process.env. Используется для GithubPages */}\n            <Provider store={store}> {/* контекст от реакт-редакса */}\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n        // для GithubPages оборачивать <HashRouter>\n    )\n};\n\n\n\nexport default MainApp\n","import React, {Suspense} from 'react';\nimport Preloader from \"../components/common/Preloader/Preloader\";\n\nexport const withSuspense = Component => { // хок принимает компоненту и возвращает, наделив функционалом редиректа\n    return (props) => {\n        return <Suspense fallback={<Preloader/>}>\n            <Component {...props}/>\n        </Suspense>\n    };\n};\n\n","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from './serviceWorker';\nimport MainApp from \"./App\";\n\nReactDOM.render(<MainApp/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n\n\n","import React from 'react';\nimport preloader from \"../../../assets/images/loader.svg\";\n\n\nlet Preloader = (props) => {\n    return (\n        <div>\n            <img src={preloader} alt={'preloader'}/>\n        </div>\n    )\n};\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","export const required = (value) => { // если нет value то показать ошибку\n    if (value) return undefined;\n    return 'Field is required';\n};\n\nexport const maxLengthCreator = (maxLength) => (value) => {  // проверка максимальной длинны поля c замыканием\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n};\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1nT56\",\"mainPhoto\":\"ProfileInfo_mainPhoto__GhSVw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};"],"sourceRoot":""}
{"version":3,"sources":["components/common/Paginator/Paginator.module.css","../node_modules/classnames/index.js","components/Users/Users.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","../node_modules/reselect/es/index.js","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","paginator","pageNumber","selectedPage","__WEBPACK_AMD_DEFINE_RESULT__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","default","undefined","userPhoto","Paginator","_ref","totalItemsCount","pageSize","currentPage","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","portionCount","_useState","useState","_useState2","Object","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","react_default","a","createElement","className","styles","onClick","filter","page","map","cn","defineProperty","Users","user","followingInProgress","unfollow","follow","react_router_dom","to","id","src","photos","small","alt","followed","disabled","some","name","status","totalUsersCount","users","common_Paginator_Paginator","Users_User","defaultEqualityCheck","b","createSelector","memoize","_len","memoizeOptions","_key","_len2","funcs","_key2","recomputations","resultFunc","pop","dependencies","every","dep","dependencyTypes","Error","getDependencies","memoizedResultFunc","concat","selector","params","resetRecomputations","createSelectorCreator","func","equalityCheck","lastArgs","lastResult","prev","next","areArgumentsShallowlyEqual","getUsersSelectorCreator","state","usersPage","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","_this","props","getUsersThunkCreator","nextProps","nextState","nextContext","this","_this$props","Fragment","Preloader","components_Users_Users","React","Component","compose","connect","setCurrentPage","toggleFollowingProgress"],"mappings":"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","file":"static/js/4.b76aaccf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__17MJB\"};","import React, {useState} from 'react';\nimport styles from './Paginator.module.css';\nimport cn from 'classnames';\n\nconst Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n    let pagesCount = Math.ceil(totalItemsCount / pageSize); // от сервара пришло общее количество, делим\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) { // высчитываем количество страниц\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize); // дробим на порции\n    let [portionNumber, setPortionNumber] = useState(1); // хук для определения и установки порции пагинатора\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1; // стандартно (1-1) * 10+1 = 0\n    let rightPortionPageNumber = portionNumber * portionSize; // 1 * 10 = 10\n\n    return (\n        <div className={styles.paginator}>\n            {portionNumber > 1 && // для всех кроме первой страницы\n            <button onClick={() => {\n                setPortionNumber(portionNumber - 1)\n            }}>Prev</button>}\n            {pages\n                .filter(page => page >= leftPortionPageNumber && page <= rightPortionPageNumber) // стандартно первые 10 страниц\n                .map((page) => { // выводить для каждой страницы спан со стилями\n                    return <span className={cn({ // classnames\n                            [styles.selectedPage]: currentPage === page // если совпадают, то применить стили\n                        },\n                        styles.pageNumber)}\n                                 key={page}\n                                 onClick={() => {\n                                     onPageChanged(page);\n                                 }}>\n                        {page}\n                    </span>\n                })}\n            {portionCount > portionNumber && // для всех кроме последней страницы\n            <button onClick={() => {\n                setPortionNumber(portionNumber + 1)\n            }}>Next</button>}\n        </div>\n    );\n};\n\nexport default Paginator;\n","import React from 'react';\nimport styles from \"./Users.module.css\";\nimport userPhoto from \"../../assets/images/User.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet Users = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n        <div>\n            <span>\n                <div>\n                    <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}\n                             alt={'user avatar'}\n                        />\n                    </NavLink>\n                </div>\n                <div>\n                    {user.followed\n                        ? <button\n                            disabled={followingInProgress.some(id => id === user.id)} // отключит кнопку если совпал айди. без проверки заблокирует все кнопки, потому что followingInProgress массив, а значит true\n                            onClick={() => {\n                                unfollow(user.id)\n                            }}>Unfollow</button>\n                        : <button\n                            disabled={followingInProgress.some(id => id === user.id)}\n                            onClick={() => {\n                                follow(user.id)\n                            }}>Follow</button>}\n                </div>\n            </span>\n            <span>\n                <span>\n                    <div>{user.name}</div>\n                    <div>{user.status}</div>\n                </span>\n                <span>\n                    <div>{'user.location.country'}</div>\n                    <div>{'user.location.city'}</div>\n                </span>\n            </span>\n        </div>\n    )\n};\n\nexport default Users;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({\n                 totalUsersCount,\n                 pageSize,\n                 currentPage,\n                 onPageChanged,\n                 users,\n                 followingInProgress,\n                 unfollow,\n                 follow\n             }) => {\n    return (\n        <div>\n            <Paginator\n                totalItemsCount={totalUsersCount}\n                pageSize={pageSize}\n                currentPage={currentPage}\n                onPageChanged={onPageChanged}\n            />\n            <div>\n                {users.map(user =>\n                    <User\n                        user={user}\n                        followingInProgress={followingInProgress}\n                        unfollow={unfollow}\n                        follow={follow}\n                        key={user.id}\n                    />)}\n            </div>\n        </div>\n    )\n};\n\nexport default Users;","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n  var length = prev.length;\n\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n  var lastArgs = null;\n  var lastResult = null; // we reference arguments instead of spreading them for performance reasons\n\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      return memoizedResultFunc.apply(null, params);\n    });\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n\n    selector.recomputations = function () {\n      return recomputations;\n    };\n\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n\n    return selector;\n  };\n}\nexport var createSelector = createSelectorCreator(defaultMemoize);\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}","import {createSelector} from \"reselect\";\n\nconst getUsers = (state) => { // обычный селектор, что возвращает данные из стейта\n    return state.usersPage.users\n};\nexport const getUsersSelectorCreator = createSelector(getUsers, (users) => { // расширенный селектор из библиотеки, принимает данный обычного селектора и выполняет в себе сложную логику.\n    return users.filter(u => true); // логика приведена только для примера, смысла в ней нет. Как и в этом селекторе.\n});\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n};\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n};\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n};\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n};\nexport const getFollowingInProgress = (state) => {\n    return state.usersPage.followingInProgress\n};\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    setCurrentPage,\n    toggleFollowingProgress,\n    getUsersThunkCreator,\n    follow,\n    unfollow\n} from \"../../redux/users-reducer\";\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersSelectorCreator\n} from \"../../redux/users-selectors\";\n\nclass UsersContainer extends React.Component { // или extends React.PureComponent, чтобы самим не писать оптимизацию рендера\n    shouldComponentUpdate(nextProps, nextState, nextContext) { // метод оптимизация рендера\n        return nextProps !== this.props || nextState !== this.state // перерисует если true\n    }\n\n    componentDidMount() {\n        let {currentPage, pageSize} = this.props;\n        this.props.getUsersThunkCreator(currentPage, pageSize); // вызываем санк криэйтор и передаем в него параметры\n    }\n\n    onPageChanged = (pageNumber) => {\n        let {pageSize} = this.props;\n        this.props.getUsersThunkCreator(pageNumber, pageSize);\n    };\n\n    render() {\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => { // реализация через селекторы. Они принимают state на входе и возвращают то, что запрашивают\n    return {\n        users: getUsersSelectorCreator(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setCurrentPage,\n        toggleFollowingProgress,\n        getUsersThunkCreator\n    })\n)(UsersContainer);\n"],"sourceRoot":""}
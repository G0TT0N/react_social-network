{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItem","messages","message","active","dialog","Message","props","react_default","a","createElement","className","style","DialogItem","path","id","react_router_dom","to","name","maxLengthCreator50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogElements","dialogsData","map","Dialogs_DialogItem_DialogItem","key","messagesElements","messagesData","Dialogs_Message_Message","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","value","react_router","React"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,YAAA,6BAAAC,SAAA,0BAAAC,QAAA,qECAlBL,EAAAC,QAAA,CAAkBK,OAAA,2BAAAC,OAAA,sICUHC,EARC,SAACC,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMT,SACjBI,EAAMJ,oCCQJU,EAVI,SAACN,GAChB,IAAIO,EAAO,uBAAyBP,EAAMQ,GAE1C,OACIP,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMP,OAAS,IAAMO,IAAMR,QACvCI,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAASC,GAAIH,GAAOP,EAAMW,0CCDhCC,EAAqBC,YAAiB,IA8CtCC,EAAsBC,YAAU,CAClCC,KAAM,wBADkBD,CAhBL,SAACf,GACpB,OACIC,EAAAC,EAAAC,cAAA,QAAMc,SAAUjB,EAAMkB,cAClBjB,EAAAC,EAAAC,cAACgB,EAAA,EAAD,CACIC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBD,KAAK,iBACLa,YAAY,uBAEhBvB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,0BAUDsB,EAhDC,SAACzB,GACb,IAAI0B,EAAQ1B,EAAM2B,YAEdC,EAAiBF,EAAMG,YAAYC,IACnC,SAAAhC,GAAM,OAAIG,EAAAC,EAAAC,cAAC4B,EAAD,CAAYC,IAAKlC,EAAOU,GAAIG,KAAMb,EAAOa,KAAMH,GAAIV,EAAOU,OAGpEyB,EAAmBP,EAAMQ,aAAaJ,IACtC,SAAAlC,GAAO,OAAIK,EAAAC,EAAAC,cAACgC,EAAD,CAASH,IAAKpC,EAAQY,GAAIZ,QAASA,EAAQA,YAO1D,OACIK,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMZ,SAClBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMX,aACjBkC,GAEL3B,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAMV,UAClBM,EAAAC,EAAAC,cAAA,WAAM8B,IAEVhC,EAAAC,EAAAC,cAACW,EAAD,CAAqBG,SAZT,SAACmB,GACjBpC,EAAMqC,YAAYD,EAAOE,6EClB7BC,EAA6B,SAACb,GAAD,MAAY,CACzCc,OAAQd,EAAMe,KAAKD,gBCgBRE,sBACXC,YAfkB,SAACjB,GACnB,MAAO,CACHC,YAAaD,EAAMC,cAIF,SAACiB,GACtB,MAAO,CACHP,YAAa,SAACC,GACVM,EAASC,YAAmBP,QDRR,SAAAQ,GAAa,IACnCC,EADmC,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAf,IAAA,SAAA0B,MAAA,WAGjC,OAAKP,KAAKnD,MAAMwC,OACTvC,EAAAC,EAAAC,cAAC2C,EAAcK,KAAKnD,OADIC,EAAAC,EAAAC,cAACwD,EAAA,EAAD,CAAUjD,GAAG,eAHXqC,EAAA,CACTa,IAAMd,WAStC,OAFqCH,YAAQJ,EAARI,CAAoCI,ICK9DL,CAGbjB","file":"static/js/3.873571ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"DialogItem_active__2qnc5\",\"dialog\":\"DialogItem_dialog__3tDA2\"};","import React from 'react';\nimport style from \"./Message.module.css\";\n\nconst Message = (props) => {\n    return (\n        <div className={style.message}>\n            {props.message}\n        </div>\n    )\n};\n\nexport default Message;","import React from 'react';\nimport style from \"./DialogItem.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nconst DialogItem = (props) => {\n    let path = '/dialogs/DialogItem/' + props.id;\n\n    return (\n        <div className={style.dialog + ' ' + style.active}>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n};\n\nexport default DialogItem;","import React from 'react';\nimport style from './Dialogs.module.css';\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\n\nconst maxLengthCreator50 = maxLengthCreator(50);\n\nconst Dialogs = (props) => {\n    let state = props.dialogsPage;\n\n    let dialogElements = state.dialogsData.map(\n        dialog => <DialogItem key={dialog.id} name={dialog.name} id={dialog.id}/>\n    );\n\n    let messagesElements = state.messagesData.map(\n        message => <Message key={message.id} message={message.message}/>\n    );\n\n    let addNewMessage = (values) => {\n        props.sendMessage(values.newMessageBody);\n    };\n\n    return (\n        <div className={style.dialogs}>\n            <div className={style.dialogsItem}>\n                {dialogElements}\n            </div>\n            <div className={style.messages}>\n                <div>{messagesElements}</div>\n            </div>\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\n        </div>\n    )\n};\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                component={TextArea}\n                validate={[required, maxLengthCreator50]}\n                name='newMessageBody'\n                placeholder='Enter your message'>\n            </Field>\n            <div>\n                <button>Send</button>\n            </div>\n        </form>\n    )\n};\n\nconst AddMessageFormRedux = reduxForm({\n    form: 'dialogAddMessageForm'\n})(AddMessageForm);\n\nexport default Dialogs;","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({ // доп данные для работы редиректа\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = Component => { // хок принимает компоненту и возвращает, наделив функционалом редиректа\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login'/>; // редирект\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent); // еще раз обернем connect и вернем уже готовый редирект\n\n    return ConnectedAuthRedirectComponent;\n};\n\n","import React from 'react';\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.dialogsPage,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        sendMessage: (newMessageBody) => {\n            dispatch(sendMessageCreator(newMessageBody))\n        },\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirect\n)(Dialogs);"],"sourceRoot":""}